'''Version 1:
    Encrypted message was only capitalized letters and no spaces.
    Key was only capitalized letters.'''
'''Version 2:
    Key is now Unicode characters 21 - 126.
    Encrypted message is in Hexadecimal.
    Removed auto check.'''
from random import randint

def create_key(m):
    k = ''
    for i in range(0, len(m)):
        k += chr(randint(0x21, 0x7E))
    print 'The key is:\n%s\n' % k
    return k

def encrypt_t2t(m):
    print '\nThe message is:\n%s\n' % m
    k = create_key(m)
    e = []
    for i, p in enumerate(m):
        z = hex(ord(p) ^ ord(k[i]))
        z = z[2: len(z)]
        e.append(z)
    e = ' '.join(e)
    print 'The encrypted message is:\n%s' % e

def decrypt_b2t(e, k):
    z = ''
    e = e.replace(' ', ' 0x')
    e = '0x' + e
    e = e.split(' ')
    for i, p in enumerate(e):
        z +=  chr(ord(k[i]) ^ int(p, 16))
    print '\nThe decrypted message is:\n%s\n' % z
def encrypt():
    m = raw_input('\nWhat is your message?\n\n')
    encrypt_t2t(m)

def menu():
    c = raw_input('Would you like to:\n\n1. Encrypt\n2. Decrypt\n\n')
    if c == '1':
        encrypt()
    elif c == '2':
        e = raw_input('\nWhat is your encrypted message?\n\n')
        k = raw_input('\nWhat is your key?\n\n')
        decrypt_b2t(e, k)
    else:
        print '\nChoose 1 or 2'
menu()

#'2f 42 26 4e 46'
#'G'J")'